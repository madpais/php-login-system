<?php
/**
 * Script de verifica√ß√£o da instala√ß√£o completa
 * Execute para verificar se tudo est√° funcionando
 */

echo "üîç VERIFICA√á√ÉO DA INSTALA√á√ÉO - DAYDREAMING\n";
echo "=========================================\n\n";

$problemas = [];
$sucessos = [];

// 1. Verificar PHP
echo "üêò VERIFICANDO PHP...\n";
$php_version = phpversion();
if (version_compare($php_version, '7.4.0', '>=')) {
    $sucessos[] = "PHP $php_version (‚úÖ Compat√≠vel)";
    echo "‚úÖ PHP $php_version\n";
} else {
    $problemas[] = "PHP $php_version (‚ùå Requer 7.4+)";
    echo "‚ùå PHP $php_version (Requer 7.4+)\n";
}

// 2. Verificar extens√µes PHP
echo "\nüîå VERIFICANDO EXTENS√ïES PHP...\n";
$extensoes_necessarias = ['pdo', 'pdo_mysql', 'json', 'mbstring'];

foreach ($extensoes_necessarias as $ext) {
    if (extension_loaded($ext)) {
        $sucessos[] = "Extens√£o $ext";
        echo "‚úÖ $ext\n";
    } else {
        $problemas[] = "Extens√£o $ext n√£o encontrada";
        echo "‚ùå $ext\n";
    }
}

// 3. Verificar arquivos essenciais
echo "\nüìÅ VERIFICANDO ARQUIVOS ESSENCIAIS...\n";
$arquivos_essenciais = [
    'config.php' => 'Configura√ß√£o do banco',
    'setup_database.php' => 'Script de configura√ß√£o',
    'seed_questoes.php' => 'Script de quest√µes',
    'index.php' => 'P√°gina inicial',
    'login.php' => 'Sistema de login',
    'simulador_provas.php' => 'Simulador',
    'executar_teste.php' => 'Execu√ß√£o de testes',
    'interface_teste.php' => 'Interface do teste',
    'processar_teste.php' => 'Processamento',
    'resultado_teste.php' => 'Resultados',
    'historico_provas.php' => 'Hist√≥rico',
    'revisar_prova.php' => 'Revis√£o',
    'header_status.php' => 'Header de status'
];

foreach ($arquivos_essenciais as $arquivo => $descricao) {
    if (file_exists($arquivo)) {
        $sucessos[] = "$descricao ($arquivo)";
        echo "‚úÖ $arquivo\n";
    } else {
        $problemas[] = "$descricao ($arquivo) n√£o encontrado";
        echo "‚ùå $arquivo\n";
    }
}

// 4. Verificar pasta de exames
echo "\nüìö VERIFICANDO ARQUIVOS DE EXAMES...\n";
$arquivos_exames = [
    'exames/SAT/SAT_Test_4.json' => 'Quest√µes SAT',
    'exames/SAT/Answers_SAT_Test_4.json' => 'Respostas SAT'
];

foreach ($arquivos_exames as $arquivo => $descricao) {
    if (file_exists($arquivo)) {
        $sucessos[] = "$descricao ($arquivo)";
        echo "‚úÖ $arquivo\n";
    } else {
        $problemas[] = "$descricao ($arquivo) n√£o encontrado";
        echo "‚ùå $arquivo\n";
    }
}

// 5. Verificar conex√£o com banco
echo "\nüóÑÔ∏è VERIFICANDO CONEX√ÉO COM BANCO...\n";
try {
    if (file_exists('config.php')) {
        require_once 'config.php';
        $pdo = conectarBD();
        $sucessos[] = "Conex√£o com banco de dados";
        echo "‚úÖ Conectado ao banco\n";
        
        // Verificar se as tabelas existem
        $tabelas_necessarias = [
            'usuarios', 'questoes', 'sessoes_teste', 
            'respostas_usuario', 'resultados_testes', 'badges',
            'usuario_badges', 'forum_categorias', 'forum_topicos',
            'forum_respostas', 'niveis_usuario', 'configuracoes_sistema'
        ];
        
        echo "\nüìã VERIFICANDO TABELAS PRINCIPAIS...\n";
        $tabelas_encontradas = 0;
        foreach ($tabelas_necessarias as $tabela) {
            try {
                $stmt = $pdo->query("SELECT COUNT(*) FROM $tabela");
                $count = $stmt->fetchColumn();
                $sucessos[] = "Tabela $tabela ($count registros)";
                echo "‚úÖ $tabela ($count registros)\n";
                $tabelas_encontradas++;
            } catch (Exception $e) {
                $problemas[] = "Tabela $tabela n√£o encontrada";
                echo "‚ùå $tabela (n√£o encontrada)\n";
            }
        }
        
        // Verificar usu√°rios padr√£o
        echo "\nüë§ VERIFICANDO USU√ÅRIOS PADR√ÉO...\n";
        try {
            $stmt = $pdo->query("SELECT usuario, nome, is_admin FROM usuarios WHERE usuario IN ('admin', 'teste')");
            $usuarios = $stmt->fetchAll();
            
            foreach ($usuarios as $usuario) {
                $tipo = $usuario['is_admin'] ? 'Admin' : 'Usu√°rio';
                $sucessos[] = "Usu√°rio {$usuario['usuario']} ($tipo)";
                echo "‚úÖ {$usuario['usuario']} - {$usuario['nome']} ($tipo)\n";
            }
            
            if (count($usuarios) < 2) {
                $problemas[] = "Usu√°rios padr√£o n√£o encontrados";
                echo "‚ö†Ô∏è Execute: php setup_database.php\n";
            }
        } catch (Exception $e) {
            $problemas[] = "Erro ao verificar usu√°rios";
            echo "‚ùå Erro ao verificar usu√°rios\n";
        }
        
        // Verificar quest√µes
        echo "\nüìù VERIFICANDO QUEST√ïES...\n";
        try {
            $stmt = $pdo->query("SELECT tipo_prova, COUNT(*) as total FROM questoes GROUP BY tipo_prova");
            $questoes = $stmt->fetchAll();
            
            if (empty($questoes)) {
                $problemas[] = "Nenhuma quest√£o encontrada";
                echo "‚ö†Ô∏è Execute: php seed_questoes.php\n";
            } else {
                foreach ($questoes as $questao) {
                    $sucessos[] = "Quest√µes {$questao['tipo_prova']} ({$questao['total']})";
                    echo "‚úÖ {$questao['tipo_prova']}: {$questao['total']} quest√µes\n";
                }
            }
        } catch (Exception $e) {
            $problemas[] = "Erro ao verificar quest√µes";
            echo "‚ùå Erro ao verificar quest√µes\n";
        }
        
    } else {
        $problemas[] = "Arquivo config.php n√£o encontrado";
        echo "‚ùå config.php n√£o encontrado\n";
    }
} catch (Exception $e) {
    $problemas[] = "Erro de conex√£o com banco: " . $e->getMessage();
    echo "‚ùå Erro de conex√£o: " . $e->getMessage() . "\n";
}

// 6. Verificar permiss√µes
echo "\nüîê VERIFICANDO PERMISS√ïES...\n";
$diretorios_escrita = ['.', 'exames'];

foreach ($diretorios_escrita as $dir) {
    if (is_dir($dir) && is_writable($dir)) {
        $sucessos[] = "Permiss√£o de escrita em $dir";
        echo "‚úÖ $dir (escrita permitida)\n";
    } else {
        $problemas[] = "Sem permiss√£o de escrita em $dir";
        echo "‚ùå $dir (sem permiss√£o de escrita)\n";
    }
}

// 7. Resumo final
echo "\n" . str_repeat("=", 50) . "\n";
echo "üìä RESUMO DA VERIFICA√á√ÉO\n";
echo str_repeat("=", 50) . "\n\n";

echo "‚úÖ SUCESSOS (" . count($sucessos) . "):\n";
foreach (array_slice($sucessos, 0, 10) as $sucesso) {
    echo "   ‚Ä¢ $sucesso\n";
}
if (count($sucessos) > 10) {
    echo "   ‚Ä¢ ... e mais " . (count($sucessos) - 10) . " itens\n";
}

if (!empty($problemas)) {
    echo "\n‚ùå PROBLEMAS (" . count($problemas) . "):\n";
    foreach ($problemas as $problema) {
        echo "   ‚Ä¢ $problema\n";
    }
}

echo "\nüéØ STATUS GERAL:\n";
if (empty($problemas)) {
    echo "üéâ INSTALA√á√ÉO PERFEITA! Sistema pronto para uso.\n\n";
    
    echo "üåê PR√ìXIMOS PASSOS:\n";
    echo "===================\n";
    echo "1. Inicie o servidor: php -S localhost:8080\n";
    echo "2. Acesse: http://localhost:8080\n";
    echo "3. Fa√ßa login com admin/admin123\n";
    echo "4. Teste o simulador de provas\n\n";
    
} elseif (count($problemas) <= 3) {
    echo "‚ö†Ô∏è INSTALA√á√ÉO QUASE PRONTA! Alguns ajustes necess√°rios.\n\n";
    
    echo "üîß A√á√ïES RECOMENDADAS:\n";
    echo "======================\n";
    echo "1. Execute: php setup_database.php\n";
    echo "2. Execute: php seed_questoes.php\n";
    echo "3. Verifique permiss√µes: chmod -R 755 .\n\n";
    
} else {
    echo "‚ùå INSTALA√á√ÉO INCOMPLETA! V√°rios problemas encontrados.\n\n";
    
    echo "üÜò A√á√ïES NECESS√ÅRIAS:\n";
    echo "=====================\n";
    echo "1. Execute: php setup_database.php\n";
    echo "2. Execute: php seed_questoes.php\n";
    echo "3. Verifique config.php\n";
    echo "4. Instale extens√µes PHP necess√°rias\n\n";
}

echo "üìû SUPORTE:\n";
echo "===========\n";
echo "‚Ä¢ README.md - Documenta√ß√£o completa\n";
echo "‚Ä¢ COMANDOS_COLABORADORES.md - Instru√ß√µes essenciais\n";
echo "‚Ä¢ setup_database.php - Configura√ß√£o do banco\n";
echo "‚Ä¢ seed_questoes.php - Carregamento de quest√µes\n";
echo "‚Ä¢ verificar_tabelas_completas.php - Verifica√ß√£o detalhada\n";
?>
